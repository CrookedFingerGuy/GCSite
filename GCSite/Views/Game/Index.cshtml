@model PaginatedList<GCSite.Models.Game>
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
@using (Html.BeginForm())
{
    <p>
        Find by name: @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().GameName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Developer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Publisher)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Platform)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ReleaseDateUs)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ReleaseDateJp)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ReleaseDateEu)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ThumbnailPath)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().CoverArtPath)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ManualScanPath)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ThreeDBoxmodelPath)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().RetailPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().CurrentValueCib)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().CurrentValueMo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().GameSizeMb)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().GamePlayLength)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().MinSpecs)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().BoxStyle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().BoxSize)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().MediaType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().MediaCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().MediaScanPath)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.GameName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Developer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Publisher)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Platform)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDateUs)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDateJp)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDateEu)
                </td>
                <td>
                    @{
                        string imgUrl = "";
                        string imgFileName = "";
                        if (item.ThumbnailPath != null)
                        {
                            string[] splitURL = item.ThumbnailPath.Split('/');
                            imgFileName = splitURL[splitURL.Length - 1];
                            imgUrl = @"/image/upload/t_thumb/" + imgFileName;
                        }

                        if (System.IO.File.Exists(@"C:\Users\Chiz\source\repos\GCSite\GCSite\wwwroot\image\upload\t_thumb\" + imgFileName))
                        {
                            <img src="@imgUrl" width="90" height="90">
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CoverArtPath)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ManualScanPath)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ThreeDBoxmodelPath)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RetailPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentValueCib)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentValueMo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GameSizeMb)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GamePlayLength)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MinSpecs)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BoxStyle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BoxSize)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MediaType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MediaCount)
                </td>
                <td>
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<br />
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}


<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>